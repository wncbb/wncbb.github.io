<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golangs on WNCBB&#39;s blog</title>
    <link>https://wncbb.github.io/golang/</link>
    <description>Recent content in Golangs on WNCBB&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Feb 2019 17:02:12 +0800</lastBuildDate>
    
	<atom:link href="https://wncbb.github.io/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Stand</title>
      <link>https://wncbb.github.io/golang/stand/</link>
      <pubDate>Fri, 15 Feb 2019 17:02:12 +0800</pubDate>
      
      <guid>https://wncbb.github.io/golang/stand/</guid>
      <description>https://github.com/golang/go/wiki/CodeReviewComments#contexts https://gocn.io/article/1 https://sheepbao.github.io/post/golang_code_specification/ http://colobu.com/2017/02/07/write-idiomatic-golang-codes/</description>
    </item>
    
    <item>
      <title>Golang Interface</title>
      <link>https://wncbb.github.io/golang/interface_1/</link>
      <pubDate>Thu, 10 Jan 2019 20:54:46 +0800</pubDate>
      
      <guid>https://wncbb.github.io/golang/interface_1/</guid>
      <description>Russ Cox&amp;rsquo;s blog ablout golang interface
如上图所示。interface分为两部分:
 itable: 第一部分为原始数据的type信息，第二部分为data符合该interface的函数列表(b的其他方法不会出现)。
 data: 指向原始的数据。
  只有这两部分都是nil的时候，才算做nil
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  package main  type A interface{} type B interface { 	Func() } type SB struct { } func (SB) Func() {} func main() { // a is nil 	var a A if a == nil { println(&amp;#34;a is nil&amp;#34;) } else { println(&amp;#34;a is not nil&amp;#34;) } // b is nil 	var b B if b == nil { println(&amp;#34;b is nil&amp;#34;) } else { println(&amp;#34;b is not nil&amp;#34;) } // b is not nil, 因为b装载的data是nil  // 但是itable却不是nil(sb是有类型的，为SB)，  // 因此不是nil  // go2.</description>
    </item>
    
  </channel>
</rss>