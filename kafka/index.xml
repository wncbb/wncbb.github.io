<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kafkas on WNCBB&#39;s blog</title>
    <link>https://wncbb.github.io/kafka/</link>
    <description>Recent content in Kafkas on WNCBB&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Oct 2021 15:21:06 +0800</lastBuildDate><atom:link href="https://wncbb.github.io/kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Structure</title>
      <link>https://wncbb.github.io/kafka/kafka_structure/</link>
      <pubDate>Fri, 01 Oct 2021 15:21:06 +0800</pubDate>
      
      <guid>https://wncbb.github.io/kafka/kafka_structure/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://wncbb.github.io/kafka/kafka/</link>
      <pubDate>Tue, 14 Sep 2021 11:11:07 +0800</pubDate>
      
      <guid>https://wncbb.github.io/kafka/kafka/</guid>
      <description>References:  https://kafka.apache.org/documentation/#gettingStarted  保证数据不丢失措施 1. kafka配置参数 1.1 unclean.leader.election.enable = false 保证不在ISR(In-Sync-Replica)中replicas不被设置为leader
1.2 replication.factor = 3 设置多份replica
2.生产者 2.1 acks=all acks：此配置实际上代表了数据备份的可用性。
acks=0： 设置为0表示producer不需要等待任何确认收到的信息。副本将立即加到socket buffer并认为已经发送。没有任何保障可以保证此种情况下server已经成功接收数据，同时重试配置不会发生作用
acks=1： 这意味着至少要等待leader已经成功将数据写入本地log，但是并没有等待所有follower是否成功写入。这种情况下，如果follower没有成功备份数据，而此时leader又挂掉，则消息会丢失。
acks=all： 这意味着leader需要等待所有备份都成功写入日志，这种策略会保证只要有一个备份存活就不会丢失数据。这是最强的保证。
min.insync.replicas: When a producer sets acks to &amp;ldquo;all&amp;rdquo; (or &amp;ldquo;-1&amp;rdquo;), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.(这个值要小于等于replica的数量)
2.2 producer.send(msg, callback) producer端使用producer.send(msg, callback)带有回调的send方法，如果失败有回调处理。
2.3 set retires with a big number 设置retries为一个较大的值。同样是Producer的参数。当出现网络抖动时，消息发送可能会失败，此时配置了retries的Producer能够自动重试发送消息，尽量避免消息丢失。</description>
    </item>
    
  </channel>
</rss>
