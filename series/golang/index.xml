<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on WNCBB&#39;s blog</title>
    <link>https://wncbb.github.io/series/golang/</link>
    <description>Recent content in golang on WNCBB&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Mar 2021 11:34:19 +0800</lastBuildDate>
    
	<atom:link href="https://wncbb.github.io/series/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Heap</title>
      <link>https://wncbb.github.io/posts/golang/heap/</link>
      <pubDate>Thu, 04 Mar 2021 11:34:19 +0800</pubDate>
      
      <guid>https://wncbb.github.io/posts/golang/heap/</guid>
      <description>package main import ( &amp;quot;container/heap&amp;quot; &amp;quot;fmt&amp;quot; ) // An IntHeap is a min-heap of ints. type IntHeap []int func (h IntHeap) Len() int { return len(h) } func (h IntHeap) Less(i, j int) bool { return h[i] &amp;lt; h[j] } func (h IntHeap) Swap(i, j int) { h[i], h[j] = h[j], h[i] } func (h *IntHeap) Push(x interface{}) { // Push and Pop use pointer receivers because they modify the slice&#39;s length, // not just its contents.</description>
    </item>
    
  </channel>
</rss>