<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kmp on WNCBB&#39;s blog</title>
    <link>https://wncbb.github.io/categories/kmp/</link>
    <description>Recent content in kmp on WNCBB&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Mar 2021 11:26:13 +0800</lastBuildDate>
    
	<atom:link href="https://wncbb.github.io/categories/kmp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kmp</title>
      <link>https://wncbb.github.io/posts/algo/kmp/</link>
      <pubDate>Thu, 04 Mar 2021 11:26:13 +0800</pubDate>
      
      <guid>https://wncbb.github.io/posts/algo/kmp/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; ) func main() { s := &amp;quot;atoddasdfasdtodd&amp;quot; p := &amp;quot;abab&amp;quot; rst := match(s, p) fmt.Printf(&amp;quot;rst: %+v\n&amp;quot;, rst) } func match(s, p string) []int { nxt := build(p) ret := make([]int, 0) // j是p的索引，i是s的索引 for i, j := 0, 0; i &amp;lt; len(s); i++ { for j &amp;gt; 0 &amp;amp;&amp;amp; s[i] != p[j] { j = nxt[j] } if s[i] == p[j] { j++ } if j == len(p) { ret = append(ret, i-len(p)+1) j = nxt[j] } } return ret } // build would build the next array // a b a b // 0 0 0 1 2 // nxt[i]表示，p[:i]字符串，最长的相同的前缀跟后缀的长度 // 比如nxt[3], p[:3]=&amp;quot;aba&amp;quot;, 前缀a，跟后缀a // 比如nxt[4], p[:4]=&amp;quot;abab&amp;quot;, 前缀ab，跟后缀ab func build(p string) []int { ret := make([]int, 0, len(p)) ret = append(ret, 0) ret = append(ret, 0) for i, j := 1, 0; i &amp;lt; len(p); i++ { for j &amp;gt; 0 &amp;amp;&amp;amp; p[i] !</description>
    </item>
    
  </channel>
</rss>