<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>binary index tree on WNCBB&#39;s blog</title>
    <link>https://wncbb.github.io/categories/binary-index-tree/</link>
    <description>Recent content in binary index tree on WNCBB&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Mar 2021 13:53:38 +0800</lastBuildDate>
    
	<atom:link href="https://wncbb.github.io/categories/binary-index-tree/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Binary Index Tree</title>
      <link>https://wncbb.github.io/posts/algo/binary-index-tree/</link>
      <pubDate>Tue, 02 Mar 2021 13:53:38 +0800</pubDate>
      
      <guid>https://wncbb.github.io/posts/algo/binary-index-tree/</guid>
      <description>package main import &amp;quot;fmt&amp;quot; type BinaryIndexTree struct { raw []int } // lowbit的作用： // x的二进制表示： xxxx...10...0 // 返回 10...0 // 换句话说，返回二进制表示形式中，最低位1所组成的数字 func lowbit(x int) int { return x &amp;amp; (-1 * x) } func (b *BinaryIndexTree) Build(s []int) { b.raw = make([]int, len(s)+1, len(s)+1) for idx, v := range s { b.raw[idx+1] = v } for i := 1; i &amp;lt; len(b.raw); i++ { j := i + lowbit(i) if j &amp;lt; len(b.</description>
    </item>
    
  </channel>
</rss>