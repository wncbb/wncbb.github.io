<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rays on WNCBB&#39;s blog</title>
    <link>https://wncbb.github.io/ray/</link>
    <description>Recent content in Rays on WNCBB&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Sep 2021 19:47:59 +0800</lastBuildDate><atom:link href="https://wncbb.github.io/ray/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1</title>
      <link>https://wncbb.github.io/ray/1/</link>
      <pubDate>Thu, 30 Sep 2021 19:47:59 +0800</pubDate>
      
      <guid>https://wncbb.github.io/ray/1/</guid>
      <description>The next generation of AI applications will continuously interact with the environment and learn from these interactions. These applications impose new and demanding systems requirements, both in terms of performance and flexibility. In this paper, we consider these requirements and present Ray—a distributed system to address them. Ray implements a unified interface that can express both task-parallel and actor-based computations, supported by a single dynamic execution engine. To meet the performance requirements, Ray employs a distributed scheduler and a distributed and fault-tolerant store to manage the system’s control state.</description>
    </item>
    
  </channel>
</rss>
